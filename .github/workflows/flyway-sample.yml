name: Flyway-sample

on:
  push:
    branches: [ "main" ]
    paths: 
    - './code/flyway-example/*'
  pull_request:
    branches: [ "main" ]
    paths: 
    - './code/flyway-example/*'

jobs:
  build:
    environment: ECR
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'corretto'
        cache: gradle
    - name: Build with Gradle Wrapper
      working-directory: ./code/flyway-example
      run: ./gradlew clean build
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-northeast-2
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
    - name: Build, tag, and push image to Amazon ECR (${{ github.sha }})
      working-directory: ./code/flyway-example
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: ${{ vars.ECR_REPOSITORY }}
      run: |
        ./gradlew build
        cp ./build/libs/flyway_example-0.0.1-SNAPSHOT.jar app.jar
        docker build --file Dockerfile --build-arg CI_ENVIRONMENT=${{ vars.CI_ENVIRONMENT }} -t main-${{github.run_number}} .
        docker image tag main-${{github.run_number}} $ECR_REGISTRY/$ECR_REPOSITORY:main-${{github.run_number}}
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:main-${{github.run_number}}
